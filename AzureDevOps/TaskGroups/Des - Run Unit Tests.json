{
    "tasks": [
        {
            "environment": {},
            "displayName": "Build Backend image - Full SDK",
            "alwaysRun": false,
            "continueOnError": false,
            "condition": "succeeded()",
            "enabled": true,
            "timeoutInMinutes": 0,
            "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "command": "Build an image",
                "dockerFile": "$(targetDockerFile)",
                "arguments": "--pull --target build",
                "useDefaultContext": "false",
                "buildContext": ".",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(imageName)-ut",
                "imageNamesPath": "",
                "qualifyImageName": "false",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
            },
            "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
            }
        },
        {
            "environment": {},
            "displayName": "Bash Script",
            "alwaysRun": false,
            "continueOnError": false,
            "condition": "succeeded()",
            "enabled": true,
            "timeoutInMinutes": 0,
            "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "# we need to create the results folder from the agent\n# otherwise docker deamon will create it with its account\n# and this will prevent any cleanup \n\nmkdir $BUILD_SOURCESDIRECTORY/unittestresults\n\n# use stat -c '%U' dir to check ownership\nstat -c '%U' $BUILD_SOURCESDIRECTORY/unittestresults/",
                "workingDirectory": "",
                "failOnStderr": "false"
            },
            "task": {
                "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
                "versionSpec": "3.*",
                "definitionType": "task"
            }
        },
        {
            "environment": {},
            "displayName": "Execute unit tests",
            "alwaysRun": false,
            "continueOnError": false,
            "condition": "succeeded()",
            "enabled": true,
            "timeoutInMinutes": 0,
            "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "command": "Run an image",
                "dockerFile": "Backend/Dockerfile",
                "arguments": "--rm",
                "useDefaultContext": "false",
                "buildContext": ".",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(imageName)-ut",
                "imageNamesPath": "",
                "qualifyImageName": "false",
                "includeSourceTags": "false",
                "includeLatestTag": "true",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "$(Build.SourcesDirectory)/unittestresults:/results",
                "envVars": "",
                "workingDirectory": "$(unitTestDirectory)",
                "entrypointOverride": "",
                "containerCommand": "dotnet test -l trx -r /results",
                "runInBackground": "false",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
            },
            "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
            }
        },
        {
            "environment": {},
            "displayName": "Publish Test Results **/unittestresults/*.trx",
            "alwaysRun": false,
            "continueOnError": false,
            "condition": "succeededOrFailed()",
            "enabled": true,
            "timeoutInMinutes": 0,
            "inputs": {
                "testRunner": "VSTest",
                "testResultsFiles": "**/unittestresults/*.trx",
                "searchFolder": "$(System.DefaultWorkingDirectory)",
                "mergeTestResults": "false",
                "failTaskOnFailedTests": "false",
                "testRunTitle": "",
                "platform": "",
                "configuration": "",
                "publishRunAttachments": "true"
            },
            "task": {
                "id": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
                "versionSpec": "2.*",
                "definitionType": "task"
            }
        }
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "revision": 7,
    "createdBy": {
        "displayName": "Marco De Sanctis",
        "id": "20e3e1f8-da74-4df2-b217-1e703a8943cf",
        "uniqueName": ""
    },
    "createdOn": "2019-02-10T18:50:58.503Z",
    "modifiedBy": {
        "displayName": "Marco De Sanctis",
        "id": "20e3e1f8-da74-4df2-b217-1e703a8943cf",
        "uniqueName": ""
    },
    "modifiedOn": "2019-02-22T18:47:16.863Z",
    "comment": "",
    "id": "49a83f19-1e18-47b9-a4fa-02d8e8bf26cc",
    "name": "Des - Run Unit Tests",
    "version": {
        "major": 1,
        "minor": 0,
        "patch": 0,
        "isTest": false
    },
    "iconUrl": "https://cdn.vsassets.io/v/M146_20190206.11/_content/icon-meta-task.png",
    "friendlyName": "Des - Run Unit Tests",
    "description": "Task group that uses docker images defined by VS2017 to run unit tests",
    "category": "Test",
    "definitionType": "metaTask",
    "author": "Marco De Sanctis",
    "demands": [],
    "groups": [],
    "inputs": [
        {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "imageName",
            "label": "imageName",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "Name of the Docker image to build, push, or run.",
            "groupName": ""
        },
        {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "targetDockerFile",
            "label": "targetDockerFile",
            "defaultValue": "",
            "required": true,
            "type": "filePath",
            "helpMarkDown": "Path to the Dockerfile.",
            "groupName": ""
        },
        {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "unitTestDirectory",
            "label": "unitTestDirectory",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "The working directory for the test project",
            "groupName": ""
        }
    ],
    "satisfies": [],
    "sourceDefinitions": [],
    "dataSourceBindings": [],
    "instanceNameFormat": "Task group: Des - Run Unit Tests $(imageName)",
    "preJobExecution": {},
    "execution": {},
    "postJobExecution": {}
}